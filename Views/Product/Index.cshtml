@model IEnumerable<PTum.Models.Tb_mst_product>
@{
    ViewData["Title"] = "Product";
}

<style>
.uploader {
  display: block;
  clear: both;
  margin: 0 auto;
  width: 100%;
}
.uploader:hover{
  cursor: pointer;
}
.uploader label {
  float: left;
  clear: both;
  width: 100%;
  padding: 2rem 1.5rem;
  text-align: center;
  background: #fff;
  border-radius: 7px;
  border: 3px dashed #eee;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}
.uploader label.success{
    background: #C5E1A5;
}
.uploader label.hover #start i.fas {
  -webkit-transform: scale(0.8);
          transform: scale(0.8);
  opacity: 0.3;
}
.uploader #start {
  float: left;
  clear: both;
  width: 100%;
}
.uploader #start.hidden {
  display: none;
}
.uploader #start i.fas {
  font-size: 50px;
  margin-bottom: 1rem;
  -webkit-transition: all .2s ease-in-out;
  transition: all .2s ease-in-out;
}
.uploader #response {
  float: left;
  clear: both;
  width: 100%;
}
.uploader input[type="file"] {
  display: none;
}
.uploader div {
  margin: 0 0 .5rem 0;
  color: #5f6982;
}
</style>

<div class="card">
<div class="card-body">
<table class="table table-sm table-bordered" id="product-tb">
    <thead>
        <tr>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.prd_code)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.prd_name)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.prd_img)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.prd_category)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.prd_cate_img)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.prd_type)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.prd_model)
            </th>
            <th class="text-center"></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model) {
        var img = $@"~/img/products/{item.prd_img}";
        var img_cat = $@"~/img/products/{item.prd_cate_img}";
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.prd_code)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.prd_name)
            </td>
            <td class="text-center">
                @if(item.prd_img==null){
                    <img src="~/img/products/no-photo.png" width="50" height="50"/>
                }
                else{  
                    <img src="@Url.Content(img)" width="50" height="50"/>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.prd_category)
            </td>
            <td class="text-center">
                @if(item.prd_cate_img==null){
                    <img src="~/img/products/no-photo.png" width="50" height="50"/>
                }
                else{  
                    <img src="@Url.Content(img_cat)" width="50" height="50"/>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.prd_type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.prd_model)
            </td>
            <td class="text-center text-sm">
                <a asp-action="Details" asp-route-id="@item.Id" class="text-info"><i class="far fa-eye"></i> Details</a>
                <a asp-action="Edit" asp-route-id="@item.Id" class="text-primary"><i class="fas fa-pen"></i> Edit</a>
                <a asp-action="Delete" asp-route-id="@item.Id" class="text-danger"><i class="far fa-trash-alt"></i> Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
</div>
</div>


<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Upload Master Product</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <form asp-action="create" method="post" enctype="multipart/form-data" id="form-upload">
      <div class="modal-body">
            <div id="file-upload-form" class="uploader">
                <input name="files" id="file-upload" type="file" accept=".xls,.xlsx" >
                <label for="file-upload">
                    <div id="start">
                        <i class="fas fa-cloud-upload-alt"></i>
                        <div class="noti">Drop files here or click to upload..</div>
                    </div>
                </label>
            </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="submit" class="btn btn-success" disabled>Upload</button>
      </div>
      </form>
    </div>
  </div>
</div>

@section scripts{
<script type="text/babel">
   

    var table = $("#product-tb").DataTable({
        "responsive": true, 
        "lengthChange": false, 
        "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]], 
        "autoWidth": false,
        "buttons": [
            {
                extend: "pageLength",
                className: "btn-sm",
            },
            {
                text: '<i class="fas fa-plus"></i> New',
                action: function ( e, dt, node, config ) {
                    location.href="@Url.Action("Create", "Product")"
                },
                className: "btn-sm btn-outline-success",
                init: function(api, node, config) {
                    $(node).removeClass('btn-secondary')
                }
            },
            {
                text: '<i class="fas fa-plus"></i> Import',
                action: function ( e, dt, node, config ) {
                    $('#myModal').modal('show')
                },
                className: "btn-sm btn-outline-success",
                init: function(api, node, config) {
                    $(node).removeClass('btn-secondary')
                }
            },
            {
                text: '<i class="fas fa-file-download"></i> Download template',
                action: function ( e, dt, node, config ) {
                    location.href='@Url.Action("Excel", "Product")'
                },
                className: "btn-sm btn-outline-secondary",
                init: function(api, node, config) {
                    $(node).removeClass('btn-secondary')
                }
            },
            {
                extend: "excel",
                text: '<i class="far fa-file-excel"></i> Export excel',
                className: "btn-sm btn-outline-secondary",
                init: function(api, node, config) {
                    $(node).removeClass('btn-secondary')
                }
            },
        ]
    })
    
    table.buttons().container().appendTo('#product-tb_wrapper .col-md-6:eq(0)')


    $('#file-upload').change(function(){
        if( $(this).val() !=""){
            var fileName = $(this).val().replace(/^.*[\\\/]/, '');
            var ext = fileName.split('.').pop();
            if(ext=="xlsx" || ext=="xls"){
                $(this).closest('.uploader').find('label').addClass('success')
                $(this).closest('.uploader').find('label .noti').text(fileName)
                $(':input[type="submit"]').prop('disabled', false);
            }  
            else{
                $(this).empty()
                $(this).closest('.uploader').find('label').removeClass('success')
                $(this).closest('.uploader').find('label .noti').text("Drop files here or click to upload..")
                $(':input[type="submit"]').prop('disabled', true);
            }
        }
        else{
            $(':input[type="submit"]').prop('disabled', true);
            $('#form-upload').addEventListener('submit', event => {
                event.preventDefault();
            });
        }
    })

    $("#form-upload").submit(function(e){
      e.preventDefault();
        var formData = new FormData(this);
        console.log(formData)
        $.ajax({
          type: "POST",
          url: '@Url.Action("CreateExcel", "Product")',
          dataType: "json",
          async: false,
          cache: false,
          processData: false,
          contentType: false,
          headers: { 
            "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val(),
          },
          data: formData,
          error: function (result) {
            Toast.fire({
              icon: 'error',
              title: 'Please contact developer'
          })
        },
        success: function (result) {
          console.log(result);
          if (result.success) {
            Toast.fire({
              icon: 'success',
              title: 'Successfully upload file'
            })
            setTimeout(function(){ location.reload() }, 1500);
          }
          else {
            Toast.fire({
              icon: 'error',
              title: 'Please contact developer'
            })
          }
        }
      });
    });



</script>
}